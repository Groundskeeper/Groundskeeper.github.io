{
	"name": "enemyGorilla",
	"spritesheet": ".\\Images\\SpriteSheet_EnemyGorilla.png",
	"maxHealth": 300,
	"health": 300,
	"basedmg": 200,
	"x": 675,
	"y": 375,
	"movementSpeed": 5,
	"active": false,
	"states": {
		"idle" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 380,
						"y": 477
					},
					"animation": {
						"x": 10,
						"y": 330,
						"width": 522,
						"height": 240
					},
					"hitbox": {
						"x": 10,
						"y": 421,
						"width": 522,
						"height": 150
					}
				}
			]
		},
		"car_chasing" : {
			"frames": [
				{
					"duration": 1,
					"anchorpoint": {
						"x": 380,
						"y": 477
					},
					"animation": {
						"x": 10,
						"y": 330,
						"width": 522,
						"height": 240
					},
					"hitbox": {
						"x": 10,
						"y": 421,
						"width": 522,
						"height": 150
					}
				}
			]
		},
		"prep_car_passing" : {
			"frames": [
				{
					"duration": 0.6,
					"anchorpoint": {
						"x": 380,
						"y": 477
					},
					"animation": {
						"x": 10,
						"y": 330,
						"width": 522,
						"height": 240
					},
					"hitbox": {
						"x": 10,
						"y": 421,
						"width": 522,
						"height": 150
					},
					"executeonfinish": "this.changeState(\"car_passing\");"
				}
			]
		},
		"car_passing" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 380,
						"y": 477
					},
					"animation": {
						"x": 10,
						"y": 330,
						"width": 522,
						"height": 240
					},
					"hitbox": {
						"x": 10,
						"y": 421,
						"width": 522,
						"height": 150
					}
				}
			]
		},
		"robot_idle" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 128,
						"y": 590
					},
					"animation": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					}
				}
			]
		},
		"robot_leaving" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 128,
						"y": 590
					},
					"animation": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					}
				}
			]
		},
		"attack" : {
			"frames": [
				{
					"duration": 0.6,
					"anchorpoint": {
						"x": 918,
						"y": 477
					},
					"animation": {
						"x": 548,
						"y": 331,
						"width": 522,
						"height": 239
					},
					"hitbox": {
						"x": 548,
						"y": 421,
						"width": 522,
						"height": 150
					}
				},
				{
					"duration": 0.6,
					"anchorpoint": {
						"x": 1456,
						"y": 477
					},
					"animation": {
						"x": 1086,
						"y": 250,
						"width": 522,
						"height": 320
					},
					"hitbox": {
						"x": 1086,
						"y": 421,
						"width": 522,
						"height": 150
					},
					"executeonfinish": "gsGame.TriggerEvent(\"spawn_item\", 0, \"<type>barrel<\/type><posx>\" + (this.x) + \"<\/posx><posy>\" + (this.y - 100) + \"<\/posy><speedx>0<\/speedx><speedy>0<\/speedy><minY>\" + (this.y - 200) + \"<\/minY><maxY>\" + (this.y + 30) + \"<\/maxY><state>flying<\/state>\");"
				},
				{
					"duration": 0.6,
					"anchorpoint": {
						"x": 1994,
						"y": 477
					},
					"animation": {
						"x": 1624,
						"y": 311,
						"width": 522,
						"height": 259
					},
					"hitbox": {
						"x": 1624,
						"y": 421,
						"width": 522,
						"height": 150
					},
					"executeonfinish": "this.changeState(\"idle\");"
				}
			]
		},
		"robot_attack" : {
			"frames": [
				{
					"duration": 0.2,
					"anchorpoint": {
						"x": 128,
						"y": 590
					},
					"animation": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					}
				},
				{
					"duration": 0.2,
					"anchorpoint": {
						"x": 390,
						"y": 590
					},
					"animation": {
						"x": 296,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 296,
						"y": 589,
						"width": 189,
						"height": 129
					}
				},
				{
					"duration": 0.2,
					"anchorpoint": {
						"x": 652,
						"y": 590
					},
					"animation": {
						"x": 558,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 558,
						"y": 589,
						"width": 189,
						"height": 129
					}
				},
				{
					"duration": 0.4,
					"anchorpoint": {
						"x": 914,
						"y": 590
					},
					"animation": {
						"x": 820,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 820,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"executeonfinish": "// This should happen after the middle frame\n\t\t\t\t\t\t\tgsGame.TriggerEvent(\"spawn_item\", 0, \"<type>barrel<\/type><posx>\" + (this.x) + \"<\/posx><posy>\" + (this.y - 100) + \"<\/posy><speedx>\" + (gsGame.playerObj.x < this.x-20 ? -5 : 5 ) + \"<\/speedx><speedy>0<\/speedy><minY>\" + (this.y - 200) + \"<\/minY><maxY>\" + (this.y + 30) + \"<\/maxY><state>flying<\/state>\");\n\t\t\t\t\t\t\t// This should happen on the last frame\n\t\t\t\t\t\t\tthis.changeState(\"robot_idle\");"
				},
				{
					"duration": 0.2,
					"anchorpoint": {
						"x": 652,
						"y": 590
					},
					"animation": {
						"x": 558,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 558,
						"y": 589,
						"width": 189,
						"height": 129
					}
				},
				{
					"duration": 0.2,
					"anchorpoint": {
						"x": 390,
						"y": 590
					},
					"animation": {
						"x": 296,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 296,
						"y": 589,
						"width": 189,
						"height": 129
					}
				},
				{
					"duration": 0.2,
					"anchorpoint": {
						"x": 128,
						"y": 590
					},
					"animation": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					}
				}
			]
		},
		"robot_dying" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 128,
						"y": 590
					},
					"animation": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 0,
						"y": 0,
						"width": 0,
						"height": 0
					},
					"executeonfinish": "this.changeState(\"robot_dead\");\n\n\t\t\t\t\t\t// Check to see if all the enemyVehicles are \"robot_dead\". If they are then switch them all to \"dying\".\n\t\t\t\t\t\tif (gsGame.enemyVehiclePinkObj.curState == \"robot_dead\" && gsGame.enemyVehicleYellowObj.curState == \"robot_dead\" && gsGame.enemyVehicleBlackObj.curState == \"robot_dead\" && gsGame.enemyVehicleBlueObj.curState == \"robot_dead\" && gsGame.enemyGorillaObj.curState == \"robot_dead\"){\n\t\t\t\t\t\t\t gsGame.enemyVehiclePinkObj.changeState(\"dying\");\n\t\t\t\t\t\t\t gsGame.enemyVehicleYellowObj.changeState(\"dying\");\n\t\t\t\t\t\t\t gsGame.enemyVehicleBlackObj.changeState(\"dying\");\n\t\t\t\t\t\t\t gsGame.enemyVehicleBlueObj.changeState(\"dying\");\n\t\t\t\t\t\t\t gsGame.enemyGorillaObj.changeState(\"dying\");\n\t\t\t\t\t\t}"
				}
			]
		},
		"robot_dead" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 1176,
						"y": 590
					},
					"animation": {
						"x": 1082,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 0,
						"y": 0,
						"width": 0,
						"height": 0
					},
					"executeonfinish": "gsGame.enemyVehicleYellowObj.x--;"
				}
			]
		},
		"dying" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 128,
						"y": 590
					},
					"animation": {
						"x": 34,
						"y": 589,
						"width": 189,
						"height": 129
					},
					"hitbox": {
						"x": 0,
						"y": 0,
						"width": 0,
						"height": 0
					}
				}
			]
		},
		"retreating" : {
			"frames": [
				{
					"duration": 1.0,
					"anchorpoint": {
						"x": 380,
						"y": 477
					},
					"animation": {
						"x": 10,
						"y": 330,
						"width": 522,
						"height": 240
					},
					"hitbox": {
						"x": 0,
						"y": 0,
						"width": 0,
						"height": 0
					}
				}
			]
		}
	},
	"ai": "if (this.curState.indexOf(\"robot\") != -1 && this.curState != \"dying\"){\n\t\t\t\tthis.x = gsGame.enemyVehicleYellowObj.x - (gsGame.enemyVehicleYellowObj.x - gsGame.enemyVehicleYellowObj.hipposX);\n\t\t\t\tthis.y = gsGame.enemyVehicleYellowObj.y - (gsGame.enemyVehicleYellowObj.y - gsGame.enemyVehicleYellowObj.hipposY);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.speedX = 0;\n\t\t\t\tthis.speedY = 0;\n\t\t\t}\n\n\t\t\tswitch(this.curState){\n\t\t\t\tcase \"idle\":\n\t\t\t\t\t// If there's an active \"barrel\" on the screen then we don't want to move\n\t\t\t\t\tvar activeBarrel = false;\n\t\t\t\t\tfor (var b = 0; b < gsGame.worldObjects.length ; b++){\n\t\t\t\t\t\tif (gsGame.worldObjects[b].name == \"barrel\" && gsGame.worldObjects[b].active){\n\t\t\t\t\t\t\tactiveBarrel = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!activeBarrel)\n\t\t\t\t\t\tthis.moveToCoordinate(250, gsGame.playerObj.y, this.movementSpeed, 10, this.changeState.bind(this, \"attack\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"car_chasing\":\n\t\t\t\t\tvar vehicle = this;\n\t\t\t\t\tthis.moveToCoordinate(!vehicle.movingRight ? 160 : 200, this.y, !vehicle.movingRight ? 2 : 5, 0, function(){ vehicle.movingRight = !vehicle.movingRight; });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prep_car_passing\":\n\t\t\t\t\t// Just sit there for a second and then changeState into car_passing. So put in an executeonfinish in the final frame of this state to changeState(\"car_passing\")\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"car_passing\":\n\t\t\t\t\tvar vehicle = this;\n\t\t\t\t\t// Speed off screen\n\t\t\t\t\tthis.moveToCoordinate(1600, this.y, 30, 0, function(){ \n\t\t\t\t\t\t// Deactivate this object\n\t\t\t\t\t\tvehicle.active = false;\n\t\t\t\t\t\t// See if there are any other vehicles alive. If not, then let's play the transforming sound\n\t\t\t\t\t\tif (!gsGame.enemyVehiclePinkObj.active && !gsGame.enemyVehicleYellowObj.active && !gsGame.enemyVehicleBlackObj.active && !gsGame.enemyVehicleBlueObj.active && !gsGame.enemyGorillaObj.active){\n\t\t\t\t\t\t\tgameEngine.soundArray[\"Transforming\"].play();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"attack\":\n\t\t\t\t\t// Actually nothing, the animation will take care of it all.\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"robot_idle\":\n\t\t\t\t\t// Just follow along the enemyVehicleYellow hipppos\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"robot_leaving\":\n\t\t\t\t\t// Just follow along the enemyVehicleYellow hipppos\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"robot_attack\":\n\t\t\t\t\t// Just follow along the enemyVehicleYellow hipppos and then spawn a barrel at the end of the animation.\n\t\t\t\t\t// We could potentially have a switch statement fall-through with \"robot_idle\" and the animation will handle the spawning\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"robot_dying\":\n\t\t\t\t\t// Just play a bunch of explosions for the duration of the dying frame within the bounds of the hitbox\n\t\t\t\t\t// When finished on that frame then do a changeState(\"robot_dead\")\n\n\t\t\t\t\tvar min = this.x - (this.anchorpointX - this.animationX);\n\t\t\t\t\tvar max = min + this.animationWidth;\n\t\t\t\t\txpos = Math.floor(Math.random()*(max-min+1)+min);\t\t\t\t\t\n\n\t\t\t\t\tmin = this.y - (this.anchorpointY - this.animationY);\n\t\t\t\t\tmax = min + this.animationHeight;\n\t\t\t\t\typos = Math.floor(Math.random()*(max-min+1)+min);\n\n\t\t\t\t\tgsGame.TriggerEvent(\"spawn_item\", 0, \"<type>explosion<\/type><posx>\" + xpos + \"<\/posx><posy>\" + ypos+ \"<\/posy><speedx>0<\/speedx><speedy>0<\/speedy><state>dying<\/state>\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"robot_dead\":\n\t\t\t\t\t// Don't do anything. Just sit there lookin busted.\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dying\":\n\t\t\t\t\t// Fall off of the body. Ideally the pieces won't all fall at once so we'll have to stagger it through the duration of the dying frames?\n\t\t\t\t\tthis.moveToCoordinate(this.x - 10, 800, 20, 0, null);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"retreating\":\n\t\t\t\t\t// Just move off screen, deactivate yourself and overwrite the maxHealth with your currentHealth\n\t\t\t\t\tvar vehicle = this;\n\t\t\t\t\tthis.moveToCoordinate(-200, this.y, 20, 0, function(){\n\t\t\t\t\t\tvehicle.active = false;\n\t\t\t\t\t\tvehicle.maxHealth = vehicle.health;\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}",
	"collided": "if (gsGame.worldObjects[idOfItemCollidedWith].name == \"playerBullet\"){\n\t\t\t\t// Take damage if you're: a robot OR a car with more than 50% maxHealth\n\t\t\t\tif (this.curState.indexOf(\"robot\") != -1 || (this.curState.indexOf(\"robot\") == -1 && this.health >= this.maxHealth/2)){\n\t\t\t\t\t// Play the PlayerBulletHit.wav\n\t\t\t\t\tgameEngine.soundArray[\"PlayerBulletHit\"].play();\n\t\t\t\t\tthis.health--;\n\t\t\t\t\tthis.gotHit = true;\n\t\t\t\t\tgsGame.lastHitEnemy = this.name;\n\n\t\t\t\t\t// If the enemyGorilla is in vehicle mode (meaning curState.indexOf(\"robot\") is NOT -1 and our health is at 30% (we'll do the math) then changeState to \"retreating\"\n\t\t\t\t\tif (this.curState.indexOf(\"robot\") == -1 && this.health < this.maxHealth/2){\n\t\t\t\t\t\tthis.changeState(\"retreating\");\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}"
}